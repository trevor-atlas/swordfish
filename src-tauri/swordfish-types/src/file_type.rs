use serde::{Deserialize, Serialize};
use ts_rs::TS;

#[derive(TS, Serialize, Deserialize, Debug, Clone, Eq, PartialEq)]
#[ts(export, export_to = "../../../src/types/")]
pub enum FileType {
    File,
    Directory,
    Binary,
    Typescript,
    Javascript,
    MarkdownX,
    Rust,
    Python,
    C,
    CHeader,
    ObjectCode,
    Executable,
    MakeFile,
    Cpp,
    Java,
    Go,
    Text,
    Markdown,
    Json,
    Xml,
    Yaml,
    Toml,
    Sql,
    Html,
    Css,
    Sass,
    Application,
    Image,
    Icon,
    Font,
    EBook,
    AffinityDesign,
    SchemeSource,
    VectorImage,
    Video,
    Audio,
    Archive,
    Pdf,
    Word,
    Excel,
    Powerpoint,
    Stereolithography,
    DiskImage,
    ThreeDimensionalManufacturingFormat,
    GCode,
    PKG,
    CSV,
    Prisma,
    BitwigProject,
    VirtualStudioTechnology,
    ApplePropertyList,
    EmacsLisp,
    Lua,
    Swift,
    BrewFile,
    AppleScript,
    Fish,
    Zshell,
    ShellScript,
    CronSchedule,
    FLStudioProject,
    PixelmatorProject,
    AdobePhotoshopProject,
    AdobeIllustratorProject,
    SketchDesignProject,
}

impl FileType {
    pub fn from_extension(file_extension: Option<&str>) -> FileType {
        match file_extension.unwrap_or("") {
            "ts" | "tsx" => FileType::Typescript,
            "mjs" | "cjs" | "js" | "jsx" => FileType::Javascript,
            "mdx" => FileType::MarkdownX,
            "rs" => FileType::Rust,
            "py" => FileType::Python,
            "c" => FileType::C,
            "h" => FileType::CHeader,
            "o" => FileType::ObjectCode,
            "mak" => FileType::MakeFile,
            "cc" | "cpp" => FileType::Cpp,
            "java" => FileType::Java,
            "go" => FileType::Go,
            "swift" => FileType::Swift,
            "vimrc" | "ini" | "conf" | "log" | "txt" => FileType::Text,
            "ico" => FileType::Icon,
            "fish" => FileType::Fish,
            "markdown" | "md" => FileType::Markdown,
            "json" => FileType::Json,
            "xml" => FileType::Xml,
            "yml" | "yaml" => FileType::Yaml,
            "gitconfig" | "toml" => FileType::Toml,
            "sqlite" | "sql" => FileType::Sql,
            "html" => FileType::Html,
            "css" => FileType::Css,
            "zsh" | "zshrc" => FileType::Zshell,
            "bat" | "sh" | "bash" => FileType::ShellScript,
            "flp" => FileType::FLStudioProject,
            "scss" | "sass" => FileType::Sass,
            "crontab" => FileType::CronSchedule,
            "heic" | "avif" | "webp" | "png" | "jpg" | "jpeg" | "jpeg2000" | "gif" | "bmp"
            | "raw" => FileType::Image,
            "afdesign" => FileType::AffinityDesign,
            "bwproject" => FileType::BitwigProject,
            "vst3" | "vst2" | "vst" => FileType::VirtualStudioTechnology,
            "plist" => FileType::ApplePropertyList,
            "spacemacs" | "el" => FileType::EmacsLisp,
            "scpt" | "scptd" | "applescript" => FileType::AppleScript,
            "lua" => FileType::Lua,
            "otf" | "ttf" => FileType::Font,
            "scm" => FileType::SchemeSource,
            "svg" => FileType::VectorImage,
            "epub" => FileType::EBook,
            "pxd" => FileType::PixelmatorProject,
            "psd" => FileType::AdobePhotoshopProject,
            "sketch" => FileType::SketchDesignProject,
            "ai" => FileType::AdobeIllustratorProject,
            "mp4" | "mkv" | "avi" | "mov" | "flv" | "wmv" | "webm" => FileType::Video,
            "mp3" | "wav" | "flac" | "ogg" | "m4a" | "wma" => FileType::Audio,
            "zip" | "tar" | "gz" | "7z" | "rar" => FileType::Archive,
            "prisma" => FileType::Prisma,
            "pdf" => FileType::Pdf,
            "doc" | "docx" => FileType::Word,
            "xls" | "xlsx" => FileType::Excel,
            "ppt" | "pptx" => FileType::Powerpoint,
            "stl" => FileType::Stereolithography,
            "3mf" => FileType::ThreeDimensionalManufacturingFormat,
            "gcode" => FileType::GCode,
            "pkg" => FileType::PKG,
            "csv" => FileType::CSV,
            "iso" | "dmg" => FileType::DiskImage,
            "app" | "exe" => FileType::Application,
            "dylib" => FileType::Executable,
            _ => FileType::File,
        }
    }
}
